name: Update iOS App Version and Merge

on:
  workflow_dispatch:
    inputs:
      new_version:
        description: "New version (e.g., 1.2.3)"
        required: true

jobs:
  update_version:
    runs-on: macos-latest
    steps:
      - name: Checkout develop branch
        uses: actions/checkout@v4
        with:
          ref: develop
          token: ${{ secrets.GH_TOKEN }}

      - name: Validate version format
        run: |
          version="${{ github.event.inputs.new_version }}"
          if ! [[ "$version" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format. Version should be in the format X.Y.Z (e.g., 1.2.3)."
            exit 1
          fi
          echo "Version format is valid: $version"

      - name: Update version in Info.plist
        run: |
          plist_path="SwiftLift/Info.plist"
          new_version="${{ github.event.inputs.new_version }}"
          # Only update CFBundleShortVersionString (Version)
          /usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $new_version" "$plist_path"

      - name: Generate changelog since last merge
        run: |
          # Get the last merge commit hash in master
          last_merge_commit=$(git log master --merges --max-count=1 --format="%H")
          echo "Last merge commit: $last_merge_commit"
          
          # Get the commits on develop since the last merge
          changelog=$(git log $last_merge_commit..develop --oneline --pretty=format:"- %s")
          
          if [ -z "$changelog" ]; then
            echo "No changes since last merge."
            changelog="No changes since last merge."
          fi
          
          echo "Changelog:\n$changelog"
          echo "CHANGES=$changelog" >> $GITHUB_ENV

      - name: Commit version change and changelog
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          
          # Get the changelog from environment variable
          changelog="${{ env.CHANGES }}"
          
          # Create the commit message with the new version and changelog
          commit_message="Bump version to ${{ github.event.inputs.new_version }}\n\nChanges:\n$changelog"
          
          git add SwiftLift/Info.plist
          git commit -m "$commit_message"
          git push origin develop

      - name: Merge develop into master
        run: |
          git checkout master
          git pull origin master
          git merge --no-ff develop -m "Merge develop into master - Version ${{ github.event.inputs.new_version }}"
          git push origin master
